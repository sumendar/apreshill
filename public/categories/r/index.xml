<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>R on Shirin&#39;s playgRound</title>
    <link>/categories/r/</link>
    <description>Recent content in R on Shirin&#39;s playgRound</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 29 Jun 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/categories/r/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Addendum: Text-to-Speech with the googleLanguageR package</title>
      <link>/2018/06/googlelanguager/</link>
      <pubDate>Fri, 29 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/06/googlelanguager/</guid>
      <description>After posting my short blog post about Text-to-speech with R, I got two very useful tips. One was to use the googleLanguageR package, which uses the Google Cloud Text-to-Speech API.
And indeed, it was very easy to use and the resulting audio sounded much better than what I tried before!
Here’s a short example of how to use the package for TTS:
Set up Google Cloud and authentification You first need to set up a Google Cloud Account and provide credit card information (the first year is free to use, though).</description>
    </item>
    
    <item>
      <title>Code for Workshop: Introduction to Machine Learning with R</title>
      <link>/2018/06/intro_to_ml_workshop_heidelberg/</link>
      <pubDate>Fri, 29 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/06/intro_to_ml_workshop_heidelberg/</guid>
      <description>These are the slides from my workshop: Introduction to Machine Learning with R which I gave at the University of Heidelberg, Germany on June 28th 2018. The entire code accompanying the workshop can be found below the video.
The workshop covered the basics of machine learning. With an example dataset I went through a standard machine learning workflow in R with the packages caret and h2o:
 reading in data exploratory data analysis missingness feature engineering training and test split model training with Random Forests, Gradient Boosting, Neural Nets, etc.</description>
    </item>
    
    <item>
      <title>Text-to-speech with R</title>
      <link>/2018/06/text_to_speech_r/</link>
      <pubDate>Wed, 27 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/06/text_to_speech_r/</guid>
      <description>Computers started talking to us! They do this with so called Text-to-Speech (TTS) systems. With neural nets, deep learning and lots of training data, these systems have gotten a whole lot better in recent years. In some cases, they are so good that you can’t distinguish between human and machine voice.
In one of our recent codecentric.AI videos, we compared different Text-to-Speech systems (the video is in German, though - but the text snippets and their voice recordings we show in the video are a mix of German and English).</description>
    </item>
    
    <item>
      <title>Explaining Keras image classification models with lime</title>
      <link>/2018/06/keras_fruits_lime/</link>
      <pubDate>Thu, 21 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/06/keras_fruits_lime/</guid>
      <description>Last week I published a blog post about how easy it is to train image classification models with Keras.
What I did not show in that post was how to use the model for making predictions. This, I will do here. But predictions alone are boring, so I’m adding explanations for the predictions using the lime package.
I have already written a few blog posts (here, here and here) about LIME and have given talks (here and here) about it, too.</description>
    </item>
    
    <item>
      <title>It&#39;s that easy! Image classification with keras in roughly 100 lines of code.</title>
      <link>/2018/06/keras_fruits/</link>
      <pubDate>Fri, 15 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/06/keras_fruits/</guid>
      <description>I’ve been using keras and TensorFlow for a while now - and love its simplicity and straight-forward way to modeling. As part of the latest update to my Workshop about deep learning with R and keras I’ve added a new example analysis:
Building an image classifier to differentiate different types of fruits
And I was (again) suprised how fast and easy it was to build the model; it took not even half an hour and only around 100 lines of code (counting only the main code; for this post I added comments and line breaks to make it easier to read)!</description>
    </item>
    
    <item>
      <title>rOpenSci unconference 2018 &#43; introduction to TensorFlow Probability &amp; the &#39;greta&#39; package</title>
      <link>/2018/05/ropensci_unconf18/</link>
      <pubDate>Wed, 30 May 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/05/ropensci_unconf18/</guid>
      <description>On May 21st and 22nd, I had the honor of having been chosen to attend the rOpenSci unconference 2018 in Seattle. It was a great event and I got to meet many amazing people!
rOpenSci rOpenSci is a non-profit organisation that maintains a number of widely used R packages and is very active in promoting a community spirit around the R-world. Their core values are to have open and reproducible research, shared data and easy-to-use tools and to make all this accessible to a large number of people.</description>
    </item>
    
    <item>
      <title>July 5th &amp; 6th in Münster: Workshop on Deep Learning with Keras and TensorFlow in R</title>
      <link>/2018/05/deep_learning_keras_tensorflow_18_07/</link>
      <pubDate>Tue, 22 May 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/05/deep_learning_keras_tensorflow_18_07/</guid>
      <description>Registration is now open for my 1.5-day workshop on deep learning with Keras and TensorFlow using R.
It will take place on July 5th &amp;amp; 6th in Münster, Germany.

 
You can read about one participant’s experience in my last workshop:
 Big Data – a buzz word you can find everywhere these days, from nerdy blogs to scientific research papers and even in the news. But how does Big Data Analysis work, exactly?</description>
    </item>
    
    <item>
      <title>Comparing dependencies of popular machine learning packages with `pkgnet`</title>
      <link>/2018/04/pkgnet/</link>
      <pubDate>Mon, 30 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/04/pkgnet/</guid>
      <description>When looking through the CRAN list of packages, I stumbled upon this little gem:
 pkgnet is an R library designed for the analysis of R libraries! The goal of the package is to build a graph representation of a package and its dependencies.
 And I thought it would be fun to play around with it. The little analysis I ended up doing was to compare dependencies of popular machine learning packages.</description>
    </item>
    
    <item>
      <title>Update: Can we predict flu outcome with Machine Learning in R?</title>
      <link>/2018/04/flu_prediction/</link>
      <pubDate>Sun, 22 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/04/flu_prediction/</guid>
      <description>Since I migrated my blog from Github Pages to blogdown and Netlify, I wanted to start migrating (most of) my old posts too - and use that opportunity to update them and make sure the code still works.
Here I am updating my very first machine learning post from 27 Nov 2016: Can we predict flu deaths with Machine Learning and R?. Changes are marked as bold comments.
The main changes I made are:</description>
    </item>
    
    <item>
      <title>Look, something shiny: How to use R Shiny to make Münster traffic data accessible. Join MünsteR for our next meetup!</title>
      <link>/2018/04/meetup_june18/</link>
      <pubDate>Thu, 19 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/04/meetup_june18/</guid>
      <description>In our next MünsteR R-user group meetup on Monday, June 11th, 2018 Thomas Kluth and Thorben Jensen will give a talk titled Look, something shiny: How to use R Shiny to make Münster traffic data accessible. You can RSVP here: http://meetu.ps/e/F7zDN/w54bW/f
 About a year ago, we stumbled upon rich datasets on traffic dynamics of Münster: count data of bikes, cars, and bus passengers of high resolution. Since that day we have been crunching, modeling, and visualizing it.</description>
    </item>
    
    <item>
      <title>HH Data Science Meetup slides: Explaining complex machine learning models with LIME</title>
      <link>/2018/04/hh_datascience_meetup_2018_slides/</link>
      <pubDate>Wed, 18 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/04/hh_datascience_meetup_2018_slides/</guid>
      <description>On April 12th, 2018 I gave a talk about Explaining complex machine learning models with LIME at the Hamburg Data Science Meetup - so if you’re intersted: the slides can be found here: https://www.slideshare.net/ShirinGlander/hh-data-science-meetup-explaining-complex-machine-learning-models-with-lime-94218890
 Traditional machine learning workflows focus heavily on model training and optimization; the best model is usually chosen via performance measures like accuracy or error and we tend to assume that a model is good enough for deployment if it passes certain thresholds of these performance criteria.</description>
    </item>
    
    <item>
      <title>Meetup slides: Introducing Deep Learning with Keras</title>
      <link>/2018/04/ruhrpy_meetup_2018_slides/</link>
      <pubDate>Wed, 11 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/04/ruhrpy_meetup_2018_slides/</guid>
      <description>On April 4th, 2018 I gave a talk about Deep Learning with Keras at the Ruhr.Py Meetup in Essen, Germany. The talk was not specific to Python, though - so if you’re intersted: the slides can be found here: https://www.slideshare.net/ShirinGlander/ruhrpy-introducing-deep-learning-with-keras-and-python
  Ruhr.PY - Introducing Deep Learning with Keras and Python  von Shirin Glander  There is also a video recording of my talk, which you can see here: https://youtu.</description>
    </item>
    
    <item>
      <title>Join MünsteR for our next meetup on deep learning with Keras and R</title>
      <link>/2018/03/meetup_april18/</link>
      <pubDate>Wed, 28 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/03/meetup_april18/</guid>
      <description>In our next MünsteR R-user group meetup on Tuesday, April 17th, 2018 Kai Lichtenberg will talk about deep learning with Keras. You can RSVP here: http://meetu.ps/e/DDY1B/w54bW/f
 Although neural networks have been around for quite a while now, deep learning really just took of a few years ago. It pretty much all started when Alex Krizhevsky and Geoffrey Hinton utterly crushed classic image recognition in the 2012 ImageNet Large Scale Visual Recognition Challenge by implementing a deep neural network with CUDA on graphics cards.</description>
    </item>
    
    <item>
      <title>My upcoming meetup talks about Deep Learning with Keras and explaining complex Machine Learning Models with LIME</title>
      <link>/2018/03/meetup_talk_ruhrpy_april_18/</link>
      <pubDate>Wed, 28 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/03/meetup_talk_ruhrpy_april_18/</guid>
      <description>I’ll be talking about Deep Learning with Keras in R and Python at the following upcoming meetup:
 Ruhr.Py 2018 on Wednesday, April 4th   Introducing Deep Learning with Keras and Python Keras is a high-level API written in Python for building and prototyping neural networks. It can be used on top of TensorFlow, Theano or CNTK. In this talk we build, train and visualize a Model using Python and Keras - all interactive with Jupyter Notebooks!</description>
    </item>
    
    <item>
      <title>Another Game of Thrones network analysis - this time with tidygraph and ggraph</title>
      <link>/2018/03/got_network/</link>
      <pubDate>Sun, 04 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/03/got_network/</guid>
      <description>A while back, I did an analysis of the family network of major characters from the A Song of Ice and Fire books and the Game of Thrones TV show. In that analysis I found out that House Stark (specifically Ned and Sansa) and House Lannister (especially Tyrion) are the most important family connections in Game of Thrones; they also connect many of the story lines and are central parts of the narrative.</description>
    </item>
    
    <item>
      <title>April 12th &amp; 13th in Hamburg: Workshop on Deep Learning with Keras and TensorFlow in R</title>
      <link>/2018/02/deep_learning_keras_tensorflow_18_04/</link>
      <pubDate>Tue, 06 Feb 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/02/deep_learning_keras_tensorflow_18_04/</guid>
      <description>Registration is now open for my 1.5-day workshop on deep learning with Keras and TensorFlow using R.
It will take place on April 12th and 13th in Hamburg, Germany.
You can read about one participant’s experience in my last workshop:
 Big Data – a buzz word you can find everywhere these days, from nerdy blogs to scientific research papers and even in the news. But how does Big Data Analysis work, exactly?</description>
    </item>
    
    <item>
      <title>Join MünsteR for our next meetup on obtaining functional implications of gene expression data with R</title>
      <link>/2018/01/meetup_march18/</link>
      <pubDate>Wed, 24 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/01/meetup_march18/</guid>
      <description>In our next MünsteR R-user group meetup on March 5th, 2018 Frank Rühle will talk about bioinformatics and how to analyse genome data.
You can RSVP here: http://meetu.ps/e/DDY1B/w54bW/f
 Next-Generation sequencing and array-based technologies provided a plethora of gene expression data in the public genomics databases. But how to get meaningful information and functional implications out of this vast amount of data? Various R-packages have been published by the Bioconductor user community for distinct kinds of analysis strategies.</description>
    </item>
    
    <item>
      <title>How to make your machine learning model available as an API with the plumber package</title>
      <link>/2018/01/plumber/</link>
      <pubDate>Tue, 16 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/01/plumber/</guid>
      <description>The plumber package for R makes it easy to expose existing R code as a webservice via an API (https://www.rplumber.io/, Trestle Technology, LLC 2017).
You take an existing R script and make it accessible with plumber by simply adding a few lines of comments. If you have worked with Roxygen before, e.g. when building a package, you will already be familiar with the core concepts. If not, here are the most important things to know:</description>
    </item>
    
    <item>
      <title>Registration now open for workshop on Deep Learning with Keras and TensorFlow using R</title>
      <link>/2017/12/keras_sketchnotes/</link>
      <pubDate>Wed, 20 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>/2017/12/keras_sketchnotes/</guid>
      <description>Recently, I announced my workshop on Deep Learning with Keras and TensorFlow.
The next dates for it are January 18th and 19th in Solingen, Germany.
You can register now by following this link:https://www.codecentric.de/schulung/deep-learning-mit-keras-und-tensorflow
If any non-German-speaking people want to attend, I’m happy to give the course in English!
Contact me if you have further questions.
As a little bonus, I am also sharing my sketch notes from a Podcast I listened to when first getting into Keras:</description>
    </item>
    
    <item>
      <title>MICE (Multiple Imputation by Chained Equations) in R - sketchnotes from MünsteR Meetup</title>
      <link>/2017/11/mice_sketchnotes/</link>
      <pubDate>Tue, 28 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>/2017/11/mice_sketchnotes/</guid>
      <description>Last night, the MünsteR R user-group had another great meetup:
Karin Groothuis-Oudshoorn, Assistant Professor at the University of Twente, presented her R package mice about Multivariate Imputation by Chained Equations.
It was a very interesting talk and here are my sketchnotes that I took during it:
MICE talk sketchnotes
Here is the link to the paper referenced in my notes: https://www.jstatsoft.org/article/view/v045i03
“The mice package implements a method to deal with missing data.</description>
    </item>
    
    <item>
      <title>Workshop on Deep Learning with Keras and TensorFlow in R</title>
      <link>/2017/11/deep_learning_keras_tensorflow/</link>
      <pubDate>Mon, 20 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>/2017/11/deep_learning_keras_tensorflow/</guid>
      <description>You can now book me and my 1-day workshop on deep learning with Keras and TensorFlow using R.
In my workshop, you will learn
the basics of deep learningwhat cross-entropy and loss isabout activation functionshow to optimize weights and biases with backpropagation and gradient descenthow to build (deep) neural networks with Keras and TensorFlowhow to save and load models and model weightshow to visualize models with TensorBoardhow to make predictions on test dataDate and place depend on who and how many people are interested, so please contact me either directly or via the workshop page:https://www.</description>
    </item>
    
    <item>
      <title>How to combine point and boxplots in timeline charts with ggplot2 facets</title>
      <link>/2017/11/combine_point_boxplot_ggplot/</link>
      <pubDate>Sat, 18 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>/2017/11/combine_point_boxplot_ggplot/</guid>
      <description>In a recent project, I was looking to plot data from different variables along the same time axis. The difficulty was, that some of these variables I wanted to have as point plots, while others I wanted as box-plots.
Because I work with the tidyverse, I wanted to produce these plots with ggplot2. Faceting was the obvious first step but it took me quite a while to figure out how to best combine facets with point plots (where I have one value per time point) with and box-plots (where I have multiple values per time point).</description>
    </item>
    
    <item>
      <title>Explore Predictive Maintenance with flexdashboard</title>
      <link>/2017/11/predictive_maintenance_dashboard/</link>
      <pubDate>Thu, 02 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>/2017/11/predictive_maintenance_dashboard/</guid>
      <description>I have written the following post about Predictive Maintenance and flexdashboard at my company codecentric’s blog:
Predictive Maintenance is an increasingly popular strategy associated with Industry 4.0; it uses advanced analytics and machine learning to optimize machine costs and output (see Google Trends plot below).A common use-case for Predictive Maintenance is to proactively monitor machines, so as to predict when a check-up is needed to reduce failure and maximize performance.</description>
    </item>
    
    <item>
      <title>Why I use R for Data Science - An Ode to R</title>
      <link>/2017/09/ode_to_r/</link>
      <pubDate>Tue, 19 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>/2017/09/ode_to_r/</guid>
      <description>Working in Data Science, I often feel like I have to justify using R over Python. And while I do use Python for running scripts in production, I am much more comfortable with the R environment. Basically, whenever I can, I use R for prototyping, testing, visualizing and teaching. But because personal gut-feeling preference isn’t a very good reason to give to (scientifically minded) people, I’ve thought a lot about the pros and cons of using R.</description>
    </item>
    
  </channel>
</rss>